class Solution {
    public int[] twoSum(int[] nums, int target) {
        // int[] arr=new int[2];
        // for(int i=0;i<nums.length;i++){
        //     for(int j=i+1;j<nums.length;j++){
        //         if(target-nums[i]==nums[j]){
        //             arr[0]=i;
        //             arr[1]=j;
        //             break;
        //         }
        //     }
        // }
        // return arr;
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            int complement = target-nums[i];
            if(map.containsKey(complement)){
                return new int[] {map.get(complement),i};
            }
            map.put(nums[i],i);
        }
        return new int[0];
    }
}
package com.practice.zoho;

import java.util.*;

public class Practicezoho {
	public static void main(String[] args) {
		 long start = System.nanoTime();
		int[] nums= {2,7,11,15};
//		Arrays.sort(nums);
//		two sum
		int left=0;
		int right=nums.length-1;
		int target=9;
		while(left<right) {
			if(nums[left]+nums[right]==target) {
				break;
			}
			if(nums[left]+nums[right]<target) {
				left++;
			}else {
				right--;
			}
		}
		System.out.println(left+" "+right);
		long end = System.nanoTime();
		System.out.println("Total runtime: " + (end - start)/1_000_000.0 + " ms");
	}
}

