class Solution {
    public int characterReplacement(String s, int k) {
        int n=s.length();
        int maxlen=0;
        // bruteforce O(N^2)
        // for(int i=0;i<n;i++){
        //     int[] hash=new int[26];
        //     int maxfreq=0;
        //     for(int j=i;j<n;j++){
        //         hash[s.charAt(j)-'A']++;
        //         maxfreq=Math.max(maxfreq,hash[s.charAt(j)-'A']);
        //         int len=j-i+1;
        //         int changes=len-maxfreq;
        //         if(changes<=k){
        //             maxlen=Math.max(maxlen,len);
        //         }else{
        //             break;
        //         }
        //     }
        // }
        // return maxlen;
        // optimal approach O(N)
		int left=0,right=0;
		int[] hash=new int[26];
		int maxfreq=0;
		while(right<n) {
			hash[s.charAt(right)-'A']++;
			maxfreq=Math.max(maxfreq, hash[s.charAt(right)-'A']);
			if((right-left+1)-maxfreq>k) {
				hash[s.charAt(left)-'A']--;
				left++;
			}
			maxlen=Math.max(maxlen,right-left+1);
			right++;
		}
		return maxlen;
    }
}
