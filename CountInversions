public class countinversions {
    public static void main(String[] args) {
        int[] nums={3,8,2,0,4,5,1,6};
    long ans=mergesort(nums,0,nums.length-1);
    for(int i:nums) System.out.print(i+" ");
    System.out.println("\nCount: "+ans);
    }
    public static long mergesort(int[] nums,int left,int right){
        long cnt=0;
        if(left<right){
            int mid=(left+right)/2;
            cnt+=mergesort(nums,left,mid);
            cnt+=mergesort(nums,mid+1,right);
            cnt+=merge(nums,left,mid,right);
        }
        return cnt;
    }
    public static long merge(int[] nums,int left, int mid,int right){
        int[] temp=new int[right-left+1];
        int i=left,k=0,j=mid+1;
        long cnt=0;
        while(i<=mid&&j<=right){
            if(nums[i]<nums[j]){
                temp[k++]=nums[i++];
            }
            else{
                temp[k++]=nums[j++];
                cnt+=mid-i+1;
            }
        }
        while(i<=mid) temp[k++]=nums[i++];
        while(j<=right) temp[k++]=nums[j++];
        for(int p=0;p<temp.length;p++){
            nums[left+p]=temp[p];
        }
        return cnt;
    }
}
