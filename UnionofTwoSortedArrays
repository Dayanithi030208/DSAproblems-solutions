class Solution {
    public int[] unionArray(int[] nums1, int[] nums2) {
        // Set<Integer> set=new TreeSet<>();
        // for(int i=0;i<nums1.length;i++) set.add(nums1[i]);
        // for(int j=0;j<nums2.length;j++) set.add(nums2[j]);
        // int[] ans=new int[set.size()];
        // int index=0;
        // for(Iterator<Integer> it=set.iterator();it.hasNext();){
        //     ans[index]=it.next();
        //     index++;
        // }
        // return ans;
        List<Integer> list=new ArrayList<>();
        int i=0;
        int j=0;
        while(i<nums1.length&&j<nums2.length){
            if(nums1[i]<nums2[j]){
                if(list.isEmpty()||list.get(list.size()-1)!=nums1[i]) {
                    list.add(nums1[i]);
                }
                i++;
            }
            else{
                if(list.isEmpty()||list.get(list.size()-1)!=nums2[j]) {
                    list.add(nums2[j]);
                }
                j++;
            }
        }
        while(i<nums1.length) {
            if(list.get(list.size()-1!)=nums1[i]) list.add(nums1[i]);
            i++;
        }
        while(j<nums2.length) {
             if(list.get(list.size()-1)!=nums2[j]) list.add(nums2[j]);
             j++;
        }
        int[] ans=new int[list.size()];
        for(int k=0;k<ans.length;k++){
            ans[k]=list.get(k);
        }
        return ans;
    }
}
