class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int n=matrix.length;
        int m=matrix[0].length;
        // bruteforce
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<m;j++){
        //         if(matrix[i][j]==target) return true;
        //     }
        // }
        // return false;
        // better
        // for(int i=0;i<n;i++){
        //     if(binsearch(matrix,i,target)) return true;
        // }
        // return false;
        int row=0;
        int col=m-1;
        while(row<n&&col>=0){
            if(matrix[row][col]==target) return true;
            else if(matrix[row][col]>target) col--;
            else row++;
        }
        return false;
    }
    // private static boolean binsearch(int[][] matrix,int i,int target){
    //     int low=0;
    //     int high=matrix[i].length-1;
    //     while(low<=high){
    //         int mid=(low+high)/2;
    //         if(matrix[i][mid]==target) return true;
    //         else if(matrix[i][mid]>target) high=mid-1;
    //         else low=mid+1;
    //     }
    //     return false;
    // }
}
