import java.util.*;
public class longsubarrsumk {
    public static void main(String[] args) {
        int[] nums={-3,-7,2,3,3,4,5,6,7,10};
        int n=nums.length;
        int k=2;
        int maxlen=0;
        // bruteforce
        // for(int i=0;i<n;i++){
        //     int sum=0;
        //     for(int j=i;j<n;j++){
        //         sum+=nums[j];
        //         if(sum==k){
        //             maxlen=Math.max(maxlen,j-i+1);
        //         }
        //     }
        // }
        // System.out.println(maxlen);
        //  beter for negatives
        Map<Integer,Integer> map=new HashMap<>();
        int sum=0;
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
            if(sum==k) maxlen=Math.max(maxlen,i+1);
            if(map.containsKey(sum-k)) maxlen=Math.max(maxlen,i-map.get(sum-k));
            map.put(sum,i);
        }
        System.out.println(maxlen);
        //optimal-positives and 0s
        // int sum=0;
        // int left=0;
        // for(int right=0;right<n;right++){
        //     sum+=nums[right];
        //     while(sum>k&&left<=right){
        //         sum-=nums[left];
        //         left++;
        //     }
        //     if(sum==k) maxlen=Math.max(maxlen,right-left+1);
        // }
        // System.out.println(maxlen);
    }
}
