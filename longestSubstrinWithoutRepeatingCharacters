class Solution {
    public int lengthOfLongestSubstring(String s) {
        // brute force
        // O(N^3)
        int n=s.length();
        int maxlen=0;
        // for(int i=0;i<n;i++){ 
        //     HashSet<Character> set=new HashSet<>();
        //     for(int j=i;j<n;j++){
        //         if(set.contains(s.charAt(j))) break;
        //         set.add(s.charAt(j));
        //         maxlen=Math.max(maxlen,j-i+1);
        //     }
        // }
        // return maxlen;
        // Optimal Solution
        // O(N)
        int left=0;
        HashSet<Character> set=new HashSet<>();
        for(int right=0;right<n;right++){
            while(set.contains(s.charAt(right))){
                set.remove(s.charAt(left));
                left++;
            }
            set.add(s.charAt(right));
            maxlen=Math.max(maxlen,right-left+1);
        }
        return maxlen;
    }
}
