class Solution {
    public int findKRotation(ArrayList<Integer> nums) {
    // int cnt=0;
    // int left=0;
    // int right=nums.length();
    // if(nums[left]<nums[right]) return cnt;
    // if(nums[left]>nums[left]) cnt=1;
    // for(int i=nums.length-1;i>0;i--){
    //     if(nums[i]>nums[i-1]) cnt++;
    //     else break;
    // }
    // return cnt;
    // using binarysearch
    int left=0;
    int right=nums.length-1;
    int ans=Integer.MAX_VALUE;
    int index=-1;
    while(left<=right){
        if(nums[left]<=nums[right]){
            if(nums[left]<ans){
                index=left;
                ans=nums[left];
                break;
            }
        }
        int mid=(left+right)/2;
        if(nums[left]<=nums[mid]){
            if(nums[left]<ans){
                index=left;
                ans=nums[left];
            }
        }
        else{
            if(nums[mid]<ans){
                index=mid;
                ans=nums[mid];
            }
        }
    }
    return ans;
    }
}
