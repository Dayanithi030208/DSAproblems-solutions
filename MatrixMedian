package com.practice.demo;

public class MatrixMedian {
	public static void main(String[] args) {
		int[][] matrix= {{1,3,8},{2,3,4},{1,2,5}};
		int n=matrix.length;
		int m=matrix[0].length;
		int low=Integer.MAX_VALUE;
		int high= Integer.MIN_VALUE;
		for(int i=0;i<n;i++) {
			if(matrix[i][0]<low) {
				low=matrix[i][0];
			}
		}
		for(int i=0;i<n;i++) {
			if(matrix[i][m-1]>high) {
				high=matrix[i][m-1];
			}
		}
//		System.out.println(low+" "+high);
		int req=(n*m)/2;
		while(low<=high) {
			int mid=(low+high)/2;
			int smallestequals=findcntofsmallestequals(matrix,mid,n,m);
			if(smallestequals<=req) {
				low=mid+1;
			}else {
				high=mid-1;
			}
		}
		System.out.println(low);
	}
	private static int findcntofsmallestequals(int[][] matrix,int mid,int n,int m) {
		int cnt=0;
		for(int i=0;i<n;i++) {
			cnt+=findup(matrix,i,mid,n,m);
		}
		return cnt;
	}
	private static int findup(int[][] matrix,int i,int check,int n,int m) {
		int low=0;
		int high=m-1;
		while(low<=high) {
			int mid=(low+high)/2;
			if(matrix[i][mid]<=check) low=mid+1;
			else high=mid-1;
		}
		return low;
	}
}
