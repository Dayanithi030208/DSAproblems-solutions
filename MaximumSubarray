class Solution {
    public int maxSubArray(int[] nums) {
        int maxsum=Integer.MIN_VALUE;
        // for(int i=0;i<nums.length;i++){
        //     int sum=0;
        //     for(int j=i;j<nums.length;j++){
        //         sum+=nums[j];
        //          maxsum=Math.max(maxsum,sum);
        //     }
        // }
        // return maxsum;
        int sum=0;
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
            if(sum>maxsum){
                maxsum=sum;
            }
            if(sum<0){
                sum=0;
            }
        }
        return maxsum;
    }
}
//extended version if required the sub array elements
class Solution {
    public int maxSubArray(int[] nums) {
        int maxsum=Integer.MIN_VALUE;
        // for(int i=0;i<nums.length;i++){
        //     int sum=0;
        //     for(int j=i;j<nums.length;j++){
        //         sum+=nums[j];
        //          maxsum=Math.max(maxsum,sum);
        //     }
        // }
        // return maxsum;
        int sum=0;
        int starttrack,start,end;
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
            if(sum==0) start=i;
            if(sum>maxsum){
                maxsum=sum;
                start=starttrack;
                end=i;
            }
            if(sum<0){
                sum=0;
            }
        }
        return maxsum;
    }
}
