class Solution {
    public int findLHS(int[] nums) {
        // My and bruteforce approach
        // int n=nums.length;
        // int maxlen=0;
        // int cnt=0;
        // for(int i=0;i<n;i++){
        //     cnt=1;
        //     for(int j=i+1;j<n;j++){
        //         if(Math.abs(nums[i]-nums[j])==1) cnt++;
        //     }
        //     maxlen=Math.max(maxlen,cnt);
        // }
        // return maxlen;
        // Optimal
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }
        int maxlen=0;
        for(Map.Entry<Integer,Integer> entry:map.entrySet()){
            int len=0;
            int key=entry.getKey();
            if(map.containsKey(key+1)){
                len=map.get(key)+map.get(key+1);
            }
            maxlen=Math.max(maxlen,len);
        }
        return maxlen;
    }
}
